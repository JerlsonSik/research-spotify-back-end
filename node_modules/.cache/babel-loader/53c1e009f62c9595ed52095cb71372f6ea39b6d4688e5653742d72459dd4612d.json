{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Research\\\\myapp\\\\src\\\\ExploreSpotify.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExploreSpotify = () => {\n  _s();\n  const navigate = useNavigate();\n  const CURRENT_PLAYING_ENDPOINT = \"https://api.spotify.com/v1/me/player/currently-playing\";\n  const [trackName, setTrackName] = useState();\n  const [playingTrackArray, setPlayingTrackArray] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [userID, setUserID] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.accessToken) {\n      setToken(localStorage.accessToken);\n    }\n    const goToHomePage = () => navigate('/userid');\n    const fetchData = async () => {\n      // get the data from the api\n      const sessionData = await fetch('/survey');\n      // convert data to json\n      const json = await sessionData.json();\n      setUserID(json.userID);\n      console.log(\"UserID\", json.userID);\n      if (!sessionData.ok) {\n        goToHomePage();\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log({\n      count\n    });\n    if (count < 300) {\n      //Implementing the setInterval method\n      const interval = setInterval(() => {\n        setCount(count + 1);\n        axios.get(CURRENT_PLAYING_ENDPOINT, {\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        }).then(response => {\n          //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\n\n          if (response.data.item.name !== trackName) {\n            console.log(\"New Tracks\");\n            console.log(\"Listening track name:\", response.data.context.uri);\n            console.log(\"Listening track name:\", response.data.item.name);\n            setTrackName(response.data.item.name);\n            setPlayingTrackArray(playingTrackArray => [...playingTrackArray, [response.data.timestamp, response.data.item.name, response.data.context.uri]]);\n          }\n\n          // console.log(\"Listening track playlist:\",response.data.context.uri)\n          // console.log(\"Listening track timestamp:\",response.data.timestamp)\n          //console.log(getRandomProperty(response.data.items))\n        }).catch(error => {\n          console.log(error);\n        });\n      }, 1000);\n\n      //Clearing the interval\n      return () => clearInterval(interval);\n      // return () => {setTimeout(()=>{\n      //     clearInterval(interval)\n      //     console.log(\"Interval Cleared\")\n      // },60000)}\n    } else {\n      // handle update single record\n      axios.patch(\"/survey/\" + userID, {\n        \"playedSong\": playingTrackArray\n      }).then(response => {\n        console.log(response);\n        window.location = toString;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You would have 5 minutes to explore spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(ExploreSpotify, \"K/IkulB0YNI5K0MmDexW2dSyl7A=\", false, function () {\n  return [useNavigate];\n});\n_c = ExploreSpotify;\nexport default ExploreSpotify;\nvar _c;\n$RefreshReg$(_c, \"ExploreSpotify\");","map":{"version":3,"names":["useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","ExploreSpotify","_s","navigate","CURRENT_PLAYING_ENDPOINT","trackName","setTrackName","playingTrackArray","setPlayingTrackArray","token","setToken","count","setCount","userID","setUserID","localStorage","accessToken","goToHomePage","fetchData","sessionData","fetch","json","console","log","ok","interval","setInterval","get","headers","Authorization","then","response","data","item","name","context","uri","timestamp","catch","error","clearInterval","patch","window","location","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/Research/myapp/src/ExploreSpotify.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\"\r\nimport { useNavigate} from 'react-router-dom';\r\n\r\nconst ExploreSpotify = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const CURRENT_PLAYING_ENDPOINT = \"https://api.spotify.com/v1/me/player/currently-playing\";\r\n    const [trackName, setTrackName] = useState()\r\n    const [playingTrackArray, setPlayingTrackArray] = useState([])\r\n    const [token,setToken] = useState(\"\")\r\n    const [count, setCount] = useState(0);\r\n    const [userID, setUserID] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n             \r\n        if(localStorage.accessToken){\r\n            setToken(localStorage.accessToken)\r\n        }\r\n\r\n        const goToHomePage = () => navigate('/userid');\r\n\r\n        const fetchData = async () => {\r\n            // get the data from the api\r\n            const sessionData = await fetch('/survey');\r\n            // convert data to json\r\n            const json = await sessionData.json();\r\n            \r\n            setUserID(json.userID)\r\n\r\n            console.log(\"UserID\",json.userID)\r\n\r\n            if(!sessionData.ok){\r\n                goToHomePage()\r\n            }\r\n\r\n        }\r\n\r\n        fetchData()\r\n        \r\n    },[])\r\n\r\n    useEffect(() => {\r\n        \r\n        console.log({count})\r\n        if(count<300){\r\n            \r\n        \r\n            //Implementing the setInterval method\r\n            const interval = setInterval(() => {\r\n                setCount(count+1)\r\n                axios\r\n                    .get(CURRENT_PLAYING_ENDPOINT,{\r\n                        headers:{\r\n                            Authorization: \"Bearer \" + token,\r\n                        },\r\n                        \r\n                    })\r\n                    .then((response) => {\r\n                        //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\r\n                        \r\n                        if(response.data.item.name !== trackName){\r\n                            console.log(\"New Tracks\")\r\n                            console.log(\"Listening track name:\",response.data.context.uri)\r\n                            console.log(\"Listening track name:\",response.data.item.name)\r\n                            setTrackName(response.data.item.name)\r\n                            setPlayingTrackArray(playingTrackArray => [...playingTrackArray, [response.data.timestamp,response.data.item.name,response.data.context.uri]])\r\n                        }\r\n                        \r\n                        // console.log(\"Listening track playlist:\",response.data.context.uri)\r\n                        // console.log(\"Listening track timestamp:\",response.data.timestamp)\r\n                        //console.log(getRandomProperty(response.data.items))\r\n                        \r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n                    })\r\n            }, 1000);\r\n    \r\n            //Clearing the interval\r\n            return () => clearInterval(interval);\r\n            // return () => {setTimeout(()=>{\r\n            //     clearInterval(interval)\r\n            //     console.log(\"Interval Cleared\")\r\n            // },60000)}\r\n        }else{\r\n            // handle update single record\r\n            axios \r\n            .patch(\"/survey/\"+userID,{\r\n                \"playedSong\": playingTrackArray\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n                window.location = (toString)\r\n            })\r\n        }\r\n        \r\n    }, );\r\n\r\n    return ( \r\n        <div>\r\n            <p>You would have 5 minutes to explore spotify</p>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ExploreSpotify;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}