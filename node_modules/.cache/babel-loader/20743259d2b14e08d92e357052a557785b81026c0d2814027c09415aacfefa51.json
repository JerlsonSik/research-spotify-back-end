{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Research\\\\myapp\\\\src\\\\CheckBox.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckBox = (_ref, _ref2) => {\n  _s();\n  let {\n    optionArray\n  } = _ref;\n  let {\n    setOption\n  } = _ref2;\n  const [selected, setSelected] = useState(null);\n  const [hidden, setHidden] = useState(\"hidden\");\n  const [disabled, setDisabled] = useState(\"disabled\");\n  const onChange = optionID => {\n    setSelected(optionID);\n    // setOption(optionArray[optionID])\n    // console.log(\"please\",{optionArray.le})\n\n    if (optionID === optionArray.length - 1 && optionArray[optionID] === \"Other (please specify):\") {\n      setHidden(\"\");\n      setDisabled(\"\");\n    } else {\n      setHidden(\"hidden\");\n      setDisabled(\"disabled\");\n    }\n  };\n  return [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [optionArray.map((option, optionID) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: optionID === selected,\n        onChange: () => onChange(optionID)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)]\n    }, optionID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n      hidden: hidden,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this)];\n};\n_s(CheckBox, \"2TMe++/w6HqolTMBLddynCkW4g4=\");\n_c = CheckBox;\nexport default CheckBox;\nvar _c;\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","CheckBox","_ref","_ref2","_s","optionArray","setOption","selected","setSelected","hidden","setHidden","disabled","setDisabled","onChange","optionID","length","children","map","option","type","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/Research/myapp/src/CheckBox.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst CheckBox = ({optionArray},{setOption}) => {\r\n\r\n    const [selected, setSelected] = useState(null);\r\n    const [hidden, setHidden] = useState(\"hidden\");\r\n    const [disabled, setDisabled] = useState(\"disabled\");\r\n\r\n    const onChange = (optionID) => {\r\n        setSelected((optionID))\r\n        // setOption(optionArray[optionID])\r\n        // console.log(\"please\",{optionArray.le})\r\n\r\n\r\n        if(optionID === optionArray.length-1 && optionArray[optionID] === \"Other (please specify):\"){\r\n            setHidden(\"\");\r\n            setDisabled(\"\");\r\n        }else{\r\n            setHidden(\"hidden\");\r\n            setDisabled(\"disabled\")\r\n        }\r\n        \r\n    }\r\n\r\n    return ([ \r\n        <div>\r\n            {optionArray.map((option,optionID) => (\r\n                    <div key={optionID} >\r\n\r\n                        {<input \r\n                            type=\"checkbox\"\r\n                            checked={optionID === selected}\r\n                            onChange={() => onChange(optionID)}\r\n                        />}\r\n                        \r\n                        <label>{option}</label>\r\n                \r\n                </div>\r\n\r\n                ))}\r\n                <label hidden = {hidden}><input type=\"text\" disabled = {disabled}/></label>\r\n            \r\n            \r\n        </div>\r\n    ]);\r\n}\r\n \r\nexport default CheckBox;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAAC,IAAA,EAAAC,KAAA,KAA+B;EAAAC,EAAA;EAAA,IAA9B;IAACC;EAAW,CAAC,GAAAH,IAAA;EAAA,IAAC;IAACI;EAAS,CAAC,GAAAH,KAAA;EAEvC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,QAAQ,CAAC;EAC9C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,UAAU,CAAC;EAEpD,MAAMe,QAAQ,GAAIC,QAAQ,IAAK;IAC3BN,WAAW,CAAEM,QAAS,CAAC;IACvB;IACA;;IAGA,IAAGA,QAAQ,KAAKT,WAAW,CAACU,MAAM,GAAC,CAAC,IAAIV,WAAW,CAACS,QAAQ,CAAC,KAAK,yBAAyB,EAAC;MACxFJ,SAAS,CAAC,EAAE,CAAC;MACbE,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,MAAI;MACDF,SAAS,CAAC,QAAQ,CAAC;MACnBE,WAAW,CAAC,UAAU,CAAC;IAC3B;EAEJ,CAAC;EAED,OAAQ,cACJZ,OAAA;IAAAgB,QAAA,GACKX,WAAW,CAACY,GAAG,CAAC,CAACC,MAAM,EAACJ,QAAQ,kBACzBd,OAAA;MAAAgB,QAAA,gBAEKhB,OAAA;QACGmB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEN,QAAQ,KAAKP,QAAS;QAC/BM,QAAQ,EAAEA,CAAA,KAAMA,QAAQ,CAACC,QAAQ;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eAEFxB,OAAA;QAAAgB,QAAA,EAAQE;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GARjBV,QAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUjB,CAEJ,CAAC,eACFxB,OAAA;MAAOS,MAAM,EAAIA,MAAO;MAAAO,QAAA,eAAChB,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAACR,QAAQ,EAAIA;MAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG9E,CAAC,CACT;AACL,CAAC;AAAApB,EAAA,CA3CKH,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}