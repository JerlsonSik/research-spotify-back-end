{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import'./index.css';import reportWebVitals from'./reportWebVitals';import Home from'./Home';import{createBrowserRouter,RouterProvider}from\"react-router-dom\";import QuestionOne from'./QuestionOne';import QuestionTwo from'./QuestionTwo';import QuestionThree from'./QuestionThree';import Emotion from'./Emotion';import UserID from'./UserID';import Spotify from'./Spotify';import SpotifyUser from'./SpotifyUser';import Test from'./Test';import ExploreSpotify from'./ExploreSpotify';import End from'./End';import{jsx as _jsx}from\"react/jsx-runtime\";var router=createBrowserRouter([{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})},{path:\"/home\",element:/*#__PURE__*/_jsx(Home,{})},{path:\"/questionone\",element:/*#__PURE__*/_jsx(QuestionOne,{})},{path:\"/questiontwo\",element:/*#__PURE__*/_jsx(QuestionTwo,{})},{path:\"/questionthree\",element:/*#__PURE__*/_jsx(QuestionThree,{})},{path:\"/emotion\",element:/*#__PURE__*/_jsx(Emotion,{})},{path:\"/userid\",element:/*#__PURE__*/_jsx(UserID,{})},{path:\"/spotify\",element:/*#__PURE__*/_jsx(Spotify,{})},{path:\"/spotifyuser\",element:/*#__PURE__*/_jsx(SpotifyUser,{})},{path:\"/test\",element:/*#__PURE__*/_jsx(Test,{})},{path:\"/explorespotify\",element:/*#__PURE__*/_jsx(ExploreSpotify,{})},{path:\"/end\",element:/*#__PURE__*/_jsx(End,{})}]);var root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(RouterProvider,{router:router})// <React.StrictMode>\n//   <QuestionThree/>\n// </React.StrictMode>\n);// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","Home","createBrowserRouter","RouterProvider","QuestionOne","QuestionTwo","QuestionThree","Emotion","UserID","Spotify","SpotifyUser","Test","ExploreSpotify","End","jsx","_jsx","router","path","element","root","createRoot","document","getElementById","render"],"sources":["C:/Users/PC/Desktop/Research/myapp/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Home from './Home';\nimport { createBrowserRouter, RouterProvider} from \"react-router-dom\"\nimport QuestionOne from './QuestionOne';\nimport QuestionTwo from './QuestionTwo';\nimport QuestionThree from './QuestionThree';\nimport Emotion from './Emotion';\nimport UserID from './UserID';\nimport Spotify from './Spotify';\nimport SpotifyUser from './SpotifyUser';\nimport Test from './Test';\nimport ExploreSpotify from './ExploreSpotify';\nimport End from './End';\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element:<Home/>\n  },\n\n  {\n    path: \"/home\",\n    element:<Home/>\n  },\n\n  {\n    path: \"/questionone\",\n    element:<QuestionOne/>\n  },\n  {\n    path: \"/questiontwo\",\n    element:<QuestionTwo/>\n  },\n  {\n    path: \"/questionthree\",\n    element:<QuestionThree/>\n  },\n  {\n    path: \"/emotion\",\n    element:<Emotion/>\n  },\n  {\n    path: \"/userid\",\n    element:<UserID/>\n  },\n  {\n    path: \"/spotify\",\n    element:<Spotify/>\n  },\n  {\n    path: \"/spotifyuser\",\n    element:<SpotifyUser/>\n  },\n  {\n    path: \"/test\",\n    element:<Test/>\n  },\n  {\n    path: \"/explorespotify\",\n    element:<ExploreSpotify/>\n  },\n  {\n    path: \"/end\",\n    element:<End/>\n  }\n\n])\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <RouterProvider router = {router} />\n  // <React.StrictMode>\n  //   <QuestionThree/>\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,OAASC,mBAAmB,CAAEC,cAAc,KAAO,kBAAkB,CACrE,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,GAAG,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExB,GAAM,CAAAC,MAAM,CAAGd,mBAAmB,CAAC,CACjC,CACEe,IAAI,CAAE,GAAG,CACTC,OAAO,cAACH,IAAA,CAACd,IAAI,GAAC,CAChB,CAAC,CAED,CACEgB,IAAI,CAAE,OAAO,CACbC,OAAO,cAACH,IAAA,CAACd,IAAI,GAAC,CAChB,CAAC,CAED,CACEgB,IAAI,CAAE,cAAc,CACpBC,OAAO,cAACH,IAAA,CAACX,WAAW,GAAC,CACvB,CAAC,CACD,CACEa,IAAI,CAAE,cAAc,CACpBC,OAAO,cAACH,IAAA,CAACV,WAAW,GAAC,CACvB,CAAC,CACD,CACEY,IAAI,CAAE,gBAAgB,CACtBC,OAAO,cAACH,IAAA,CAACT,aAAa,GAAC,CACzB,CAAC,CACD,CACEW,IAAI,CAAE,UAAU,CAChBC,OAAO,cAACH,IAAA,CAACR,OAAO,GAAC,CACnB,CAAC,CACD,CACEU,IAAI,CAAE,SAAS,CACfC,OAAO,cAACH,IAAA,CAACP,MAAM,GAAC,CAClB,CAAC,CACD,CACES,IAAI,CAAE,UAAU,CAChBC,OAAO,cAACH,IAAA,CAACN,OAAO,GAAC,CACnB,CAAC,CACD,CACEQ,IAAI,CAAE,cAAc,CACpBC,OAAO,cAACH,IAAA,CAACL,WAAW,GAAC,CACvB,CAAC,CACD,CACEO,IAAI,CAAE,OAAO,CACbC,OAAO,cAACH,IAAA,CAACJ,IAAI,GAAC,CAChB,CAAC,CACD,CACEM,IAAI,CAAE,iBAAiB,CACvBC,OAAO,cAACH,IAAA,CAACH,cAAc,GAAC,CAC1B,CAAC,CACD,CACEK,IAAI,CAAE,MAAM,CACZC,OAAO,cAACH,IAAA,CAACF,GAAG,GAAC,CACf,CAAC,CAEF,CAAC,CAEF,GAAM,CAAAM,IAAI,CAAGpB,QAAQ,CAACqB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTR,IAAA,CAACZ,cAAc,EAACa,MAAM,CAAIA,MAAO,CAAE,CACnC;AACA;AACA;AACF,CAAC,CAED;AACA;AACA;AACAhB,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}