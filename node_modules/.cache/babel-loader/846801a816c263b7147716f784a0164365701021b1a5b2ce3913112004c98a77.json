{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Research\\\\myapp\\\\src\\\\SpotifyGetPlaylists.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyGetPlaylists = () => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [playlistID, setPlaylistID] = useState(\"\");\n  const itemUriArray = [];\n  useEffect(() => {\n    if (localStorage.accessToken) {\n      setToken(localStorage.accessToken);\n    }\n  }, [data]);\n  const handleGetUserID = async () => {\n    const PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me\";\n    await axios.get(PLAYLIST_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      setData(response.data.id);\n      console.log(\"Token from set\", response.data);\n      console.log(\"ID:\", data);\n      // console.log(\"Timestamp:\",response.data.timestamp)\n      // console.log(\"Token from set\",response)\n      // console.log(\"Token from set\",data)\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleCreatePlaylists = async () => {\n    const CREATE_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/users/\";\n    const toString = CREATE_PLAYLIST_ENDPOINT + data + \"/playlists\";\n    console.log(toString);\n    await axios.post(toString, {\n      name: \"name\"\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(\"Playlist Added Successful\");\n      setPlaylistID(response.data.id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleGetLikedSongs = async () => {\n    const GET_LIKED_SONGS_ENDPOINT = \"https://api.spotify.com/v1/me/tracks?limit=50\";\n    await axios.get(GET_LIKED_SONGS_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\n      console.log(\"User Liked Songs\", response.data.items);\n      //console.log(getRandomProperty(response.data.items))\n\n      const array = randomUniqueNum(10, 5);\n      for (let i = 0; i < array.length; i++) {\n        console.log(response.data.items[array[i]].track.uri);\n        itemUriArray.push(response.data.items[array[i]].track.uri);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleAddItem = async () => {\n    const ADD_ITEM_ENDPOINT = \"https://api.spotify.com/v1/playlists/\";\n    const toString = ADD_ITEM_ENDPOINT + playlistID + \"/tracks\";\n    console.log(playlistID);\n    console.log(toString);\n    console.log(itemUriArray);\n    await axios.post(toString, {\n      uris: itemUriArray\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(\"Items Added Successful\");\n      setPlaylistID(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  function randomUniqueNum(range, outputCount) {\n    let arr = [];\n    for (let i = 1; i <= range; i++) {\n      arr.push(i);\n    }\n    let result = [];\n    for (let i = 1; i <= outputCount; i++) {\n      const random = Math.floor(Math.random() * (range - i));\n      result.push(arr[random]);\n      arr[random] = arr[range - i];\n    }\n    return result;\n  }\n  const handleStartSpotify = async () => {\n    console.log(\"Start Here\");\n    let id = handleGetUserID();\n    console.log(\"dfaa\", id);\n    handleCreatePlaylists();\n    handleGetLikedSongs();\n    handleAddItem();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetUserID,\n      children: \"Get ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreatePlaylists,\n      children: \"Create Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetLikedSongs,\n      children: \"Get Liked Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartSpotify,\n      children: \"Start Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n_s(SpotifyGetPlaylists, \"q+aZet77sSl0NO8/GADUwDtW/Yo=\");\n_c = SpotifyGetPlaylists;\nexport default SpotifyGetPlaylists;\nvar _c;\n$RefreshReg$(_c, \"SpotifyGetPlaylists\");","map":{"version":3,"names":["axios","useState","useEffect","jsxDEV","_jsxDEV","SpotifyGetPlaylists","_s","token","setToken","data","setData","playlistID","setPlaylistID","itemUriArray","localStorage","accessToken","handleGetUserID","PLAYLIST_ENDPOINT","get","headers","Authorization","then","response","id","console","log","catch","error","handleCreatePlaylists","CREATE_PLAYLIST_ENDPOINT","toString","post","name","handleGetLikedSongs","GET_LIKED_SONGS_ENDPOINT","items","array","randomUniqueNum","i","length","track","uri","push","handleAddItem","ADD_ITEM_ENDPOINT","uris","range","outputCount","arr","result","random","Math","floor","handleStartSpotify","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/Research/myapp/src/SpotifyGetPlaylists.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst SpotifyGetPlaylists = () => {\r\n\r\n    const [token,setToken] = useState(\"\")\r\n    const [data, setData] = useState(\"\")\r\n    const [playlistID,setPlaylistID] = useState(\"\")\r\n    const itemUriArray = []\r\n\r\n    useEffect(() => {\r\n             \r\n        if(localStorage.accessToken){\r\n            setToken(localStorage.accessToken)\r\n        }\r\n        \r\n\r\n    },[data])\r\n     \r\n    \r\n    const handleGetUserID = async () => {\r\n\r\n        const PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me\"\r\n\r\n            await axios\r\n                .get(PLAYLIST_ENDPOINT,{\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                    },\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    setData(response.data.id)\r\n                    console.log(\"Token from set\",response.data)\r\n                    console.log(\"ID:\",data)\r\n                    // console.log(\"Timestamp:\",response.data.timestamp)\r\n                    // console.log(\"Token from set\",response)\r\n                    // console.log(\"Token from set\",data)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })  \r\n                 \r\n\r\n        \r\n    }\r\n\r\n    const handleCreatePlaylists = async () => {      \r\n        const CREATE_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/users/\" \r\n        \r\n        const toString = (CREATE_PLAYLIST_ENDPOINT+data+\"/playlists\")\r\n\r\n        console.log(toString)\r\n        await axios.post(toString,\r\n                {\r\n                    name: \"name\"\r\n                },\r\n                {\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                    \r\n                })\r\n\r\n                .then((response) => {\r\n                    console.log(\"Playlist Added Successful\")\r\n                    setPlaylistID(response.data.id)\r\n                    \r\n                })\r\n\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    \r\n                })    \r\n\r\n    } \r\n\r\n    const handleGetLikedSongs = async () => {\r\n        const GET_LIKED_SONGS_ENDPOINT = \"https://api.spotify.com/v1/me/tracks?limit=50\"\r\n        await axios\r\n                .get(GET_LIKED_SONGS_ENDPOINT,{\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                    },\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\r\n                    console.log(\"User Liked Songs\",response.data.items)\r\n                    //console.log(getRandomProperty(response.data.items))\r\n                    \r\n                    const array = randomUniqueNum(10,5)\r\n                    \r\n                    for(let i = 0; i < array.length; i++){\r\n                        console.log(response.data.items[array[i]].track.uri);\r\n                        itemUriArray.push(response.data.items[array[i]].track.uri);\r\n                    }\r\n                    \r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })  \r\n    }\r\n\r\n    const handleAddItem = async () => {\r\n        const ADD_ITEM_ENDPOINT = \"https://api.spotify.com/v1/playlists/\"\r\n        const toString = (ADD_ITEM_ENDPOINT+playlistID+\"/tracks\")\r\n        console.log(playlistID)\r\n        console.log(toString)\r\n        console.log(itemUriArray)\r\n\r\n        await axios.post(toString,\r\n            {\r\n                uris: itemUriArray\r\n            },\r\n            {\r\n                headers:{\r\n                    Authorization: \"Bearer \" + token,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n                \r\n            })\r\n\r\n            .then((response) => {\r\n                console.log(\"Items Added Successful\")\r\n                setPlaylistID(response)\r\n            })\r\n\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    function randomUniqueNum(range, outputCount) {\r\n\r\n        let arr = []\r\n        for (let i = 1; i <= range; i++) {\r\n          arr.push(i)\r\n        }\r\n      \r\n        let result = [];\r\n      \r\n        for (let i = 1; i <= outputCount; i++) {\r\n          const random = Math.floor(Math.random() * (range - i));\r\n          result.push(arr[random]);\r\n          arr[random] = arr[range - i];\r\n        }\r\n      \r\n        return result;\r\n    }\r\n\r\n    const handleStartSpotify = async () => {\r\n        console.log(\"Start Here\")\r\n        let id = handleGetUserID()\r\n        console.log(\"dfaa\",id)\r\n        handleCreatePlaylists()\r\n        handleGetLikedSongs()\r\n        handleAddItem()\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <button onClick={handleGetUserID}>Get ID</button>\r\n            <button onClick={handleCreatePlaylists}>Create Playlists</button>\r\n            <button onClick={handleAddItem}>Add Item</button>\r\n            <button onClick={handleGetLikedSongs}>Get Liked Songs</button>\r\n            <button onClick={handleStartSpotify}>Start Spotify</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SpotifyGetPlaylists;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}