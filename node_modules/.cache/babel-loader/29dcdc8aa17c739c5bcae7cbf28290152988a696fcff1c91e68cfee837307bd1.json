{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Research\\\\myapp\\\\src\\\\SpotifyGetPlaylists.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyGetPlaylists = () => {\n  _s();\n  const navigate = useNavigate();\n  const CURRENT_PLAYING_ENDPOINT = \"https://api.spotify.com/v1/me/player/currently-playing\";\n  const [trackName, setTrackName] = useState();\n  const [playingTrackArray, setPlayingTrackArray] = useState([]);\n  const [userID, setUserID] = useState(\"\");\n  useEffect(() => {\n    //Implementing the setInterval method\n    const interval = setInterval(() => {\n      axios.get(CURRENT_PLAYING_ENDPOINT, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(response => {\n        //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\n        if (response.data.item.name !== trackName) {\n          console.log(\"New Tracks\");\n          console.log(\"Listening track name:\", response.data.context.uri);\n          console.log(\"Listening track name:\", response.data.item.name);\n          setTrackName(response.data.item.name);\n          setPlayingTrackArray(playingTrackArray => [...playingTrackArray, [response.data.timestamp, response.data.item.name, response.data.context.uri]]);\n        }\n\n        // console.log(\"Listening track playlist:\",response.data.context.uri)\n        // console.log(\"Listening track timestamp:\",response.data.timestamp)\n        //console.log(getRandomProperty(response.data.items))\n      }).catch(error => {\n        console.log(error);\n      });\n    }, 1000);\n\n    //Clearing the interval\n    //return () => clearInterval(interval);\n    return () => {\n      setTimeout(() => {\n        clearInterval(interval);\n        console.log(\"Interval Cleared\");\n      }, 60000);\n    };\n  });\n\n  // Actually all these is just for console.log display\n  const [token, setToken] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [playlistID, setPlaylistID] = useState(\"\");\n  const itemUriArray = [];\n  const allLikedSongsArray = [];\n  const top40ItemUriArray = [];\n\n  // useEffect to get the token \n  useEffect(() => {\n    if (localStorage.accessToken) {\n      setToken(localStorage.accessToken);\n    }\n\n    // this function is getting the userid\n    const goToHomePage = () => navigate('/userid');\n    const fetchData = async () => {\n      // get the data from the api\n      const sessionData = await fetch('/survey');\n      // convert data to json\n      const json = await sessionData.json();\n      setUserID(json.userID);\n      console.log(\"UserID\", json.userID);\n      if (!sessionData.ok) {\n        goToHomePage();\n      }\n    };\n    fetchData();\n  }, []);\n\n  // handleGetUserID that trigger all the other function\n  const handleGetUserID = async () => {\n    let id = \"\";\n    let listID = \"\";\n    let listID2 = \"\";\n    const PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me\";\n    await axios.get(PLAYLIST_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      setData(response.data.id);\n      id = response.data.id;\n      console.log(\"Token from set\", response.data);\n      console.log(\"ID:\", response.data.id);\n      // console.log(\"Timestamp:\",response.data.timestamp)\n      // console.log(\"Token from set\",response)\n      // console.log(\"Token from set\",data)\n    }).catch(error => {\n      console.log(error);\n    });\n\n    //handleCreatePlaylists()\n    const CREATE_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/users/\";\n    const toString = CREATE_PLAYLIST_ENDPOINT + id + \"/playlists\";\n    console.log(toString);\n    await axios.post(toString, {\n      name: \"Random Top40\"\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(\"Playlist Added Successful\");\n      setPlaylistID(response.data.id);\n      listID = response.data.id;\n    }).catch(error => {\n      console.log(error);\n    });\n    await axios.post(toString, {\n      name: \"Top 40\"\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(\"Playlist Added Successful\");\n      setPlaylistID(response.data.id);\n      listID2 = response.data.id;\n    }).catch(error => {\n      console.log(error);\n    });\n\n    // handleGetLikedSongs()\n    const GET_LIKED_SONGS_ENDPOINT = \"https://api.spotify.com/v1/me/tracks?limit=50\";\n    let totalLiked = \"\";\n    await axios.get(GET_LIKED_SONGS_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      console.log(\"User Liked Songs\", response.data.items);\n      console.log(\"total\", response.data.total);\n      totalLiked = response.data.total;\n\n      // if liked songs is less than 50\n      if (response.data.total <= 50) {\n        if (response.data.total <= 40) {\n          const array = randomUniqueNum(response.data.items.length, response.data.items.length);\n          for (let i = 0; i < array.length; i++) {\n            itemUriArray.push(response.data.items[array[i]].track.uri);\n          }\n        }\n        if (response.data.total > 40) {\n          // getting random number\n          const array = randomUniqueNum(response.data.items.length, 40);\n          // for loop to get the track uri\n          for (let i = 0; i < array.length; i++) {\n            console.log(response.data.items[array[i]].track.uri);\n            itemUriArray.push(response.data.items[array[i]].track.uri);\n          }\n        }\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n\n    // if liked songs is more than 50\n    if (totalLiked > 50) {\n      const array = randomUniqueNum(totalLiked, 40);\n      console.log(array);\n      for (let i = 0; i <= Math.floor(totalLiked / 50); i++) {\n        const offset = i * 50;\n        const GET_LIKED_SONGS_MORE_ENDPOINT = \"https://api.spotify.com/v1/me/tracks?limit=50&offset=\";\n        const toString = GET_LIKED_SONGS_MORE_ENDPOINT + offset;\n        await axios.get(toString, {\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        }).then(response => {\n          for (let i = 0; i < response.data.items.length; i++) {\n            allLikedSongsArray.push(response.data.items[i]);\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n      console.log(allLikedSongsArray);\n      for (let i = 0; i < array.length; i++) {\n        itemUriArray.push(allLikedSongsArray[array[i]].track.uri);\n      }\n    }\n    if (totalLiked > 0) {\n      const GET_RECENT_TOP_40_LIKED_SONGS = \"https://api.spotify.com/v1/me/tracks?limit=40&offset=0\";\n      await axios.get(GET_RECENT_TOP_40_LIKED_SONGS, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(response => {\n        console.log(\"Length\", response.data.items.length);\n        const array = randomUniqueNum(response.data.items.length, response.data.items.length);\n        console.log(\"this is the array\", array);\n        for (let i = 0; i < array.length; i++) {\n          top40ItemUriArray.push(response.data.items[array[i]].track.uri);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    // handleAddItem \n    const ADD_ITEM_ENDPOINT = \"https://api.spotify.com/v1/playlists/\";\n    //console.log(\"2\"+playlistID2)\n    const toString2 = ADD_ITEM_ENDPOINT + listID + \"/tracks\";\n    console.log(\"ilst is\" + listID);\n    console.log(toString2);\n    console.log(itemUriArray);\n    const toString3 = ADD_ITEM_ENDPOINT + listID2 + \"/tracks\";\n    console.log(\"ilst is\" + listID2);\n    console.log(toString3);\n    console.log(top40ItemUriArray);\n    await axios.post(toString2, {\n      uris: itemUriArray // random top 40\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(\"Items Added Successful\");\n      setPlaylistID(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    await axios.post(toString3, {\n      uris: top40ItemUriArray\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(\"Items Added Successful\");\n      setPlaylistID(response);\n    }).catch(error => {\n      console.log(error);\n    });\n\n    // handle update single record\n    await axios.patch(\"/survey/\" + userID, {\n      \"top40\": top40ItemUriArray,\n      \"randomTop40\": itemUriArray\n    }).then(response => {\n      console.log(response);\n    });\n  };\n  const handleCreatePlaylists = async () => {\n    const CREATE_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/users/\";\n    const toString = CREATE_PLAYLIST_ENDPOINT + data + \"/playlists\";\n    console.log(toString);\n    await axios.post(toString, {\n      name: \"Top2\"\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(\"Playlist Added Successful\");\n      setPlaylistID(response.data.id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleGetLikedSongs = async () => {\n    const GET_LIKED_SONGS_ENDPOINT = \"https://api.spotify.com/v1/me/tracks?limit=50\";\n    await axios.get(GET_LIKED_SONGS_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\n      console.log(\"User Liked Songs\", response.data.items);\n      //console.log(getRandomProperty(response.data.items))\n\n      const array = randomUniqueNum(10, 5);\n      for (let i = 0; i < array.length; i++) {\n        console.log(response.data.items[array[i]].track.uri);\n        itemUriArray.push(response.data.items[array[i]].track.uri);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleAddItem = async () => {\n    const ADD_ITEM_ENDPOINT = \"https://api.spotify.com/v1/playlists/\";\n    //console.log(\"2\"+playlistID2)\n    const toString = ADD_ITEM_ENDPOINT + playlistID + \"/tracks\";\n    console.log(playlistID);\n    console.log(toString);\n    console.log(itemUriArray);\n    await axios.post(toString, {\n      uris: itemUriArray\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(\"Items Added Successful\");\n      setPlaylistID(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const getCurrentPlaying = async () => {\n    const CURRENT_PLAYING_ENDPOINT = \"https://api.spotify.com/v1/me/player/currently-playing\";\n    await axios.get(CURRENT_PLAYING_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\n      console.log(\"Listening track name:\", response.data);\n      console.log(\"Listening track name:\", response.data.item.name);\n      console.log(\"Listening track playlist:\", response.data.context.uri);\n      console.log(\"Listening track timestamp:\", response.data.timestamp);\n      //console.log(getRandomProperty(response.data.items))\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  function randomUniqueNum(range, outputCount) {\n    let arr = [];\n    for (let i = 0; i <= range; i++) {\n      arr.push(i);\n    }\n    let result = [];\n    for (let i = 1; i <= outputCount; i++) {\n      const random = Math.floor(Math.random() * (range - i));\n      result.push(arr[random]);\n      arr[random] = arr[range - i];\n    }\n    return result;\n  }\n\n  // This is the function that trigger everythings\n  const handleStartSpotify = async () => {\n    console.log(\"Start Here\");\n    handleGetUserID();\n    //handleGetLikedSongs()\n    //handleAddItem()\n  };\n\n  const getArray = async () => {\n    console.log(playingTrackArray);\n  };\n  const getSingleRecord = async () => {\n    await axios.get(\"/survey/\" + userID).then(response => {\n      console.log(\"Message\", response);\n    });\n  };\n  const updateSingleRecord = async () => {\n    await axios.patch(\"/survey/\" + \"newnew\", {\n      \"top40\": [\"88\"]\n    }).then(response => {\n      console.log(response);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartSpotify,\n      children: \"Start Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getCurrentPlaying,\n      children: \"Get Playing Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getArray,\n      children: \"Get Array\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getSingleRecord,\n      children: \"Axios Get Single Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: playingTrackArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 506,\n    columnNumber: 9\n  }, this);\n};\n_s(SpotifyGetPlaylists, \"ObIL0Q2A/RUh+jZufFpGdpF88C0=\", false, function () {\n  return [useNavigate];\n});\n_c = SpotifyGetPlaylists;\nexport default SpotifyGetPlaylists;\nvar _c;\n$RefreshReg$(_c, \"SpotifyGetPlaylists\");","map":{"version":3,"names":["axios","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","SpotifyGetPlaylists","_s","navigate","CURRENT_PLAYING_ENDPOINT","trackName","setTrackName","playingTrackArray","setPlayingTrackArray","userID","setUserID","interval","setInterval","get","headers","Authorization","token","then","response","data","item","name","console","log","context","uri","timestamp","catch","error","setTimeout","clearInterval","setToken","setData","playlistID","setPlaylistID","itemUriArray","allLikedSongsArray","top40ItemUriArray","localStorage","accessToken","goToHomePage","fetchData","sessionData","fetch","json","ok","handleGetUserID","id","listID","listID2","PLAYLIST_ENDPOINT","CREATE_PLAYLIST_ENDPOINT","toString","post","GET_LIKED_SONGS_ENDPOINT","totalLiked","items","total","array","randomUniqueNum","length","i","push","track","Math","floor","offset","GET_LIKED_SONGS_MORE_ENDPOINT","GET_RECENT_TOP_40_LIKED_SONGS","ADD_ITEM_ENDPOINT","toString2","toString3","uris","patch","handleCreatePlaylists","handleGetLikedSongs","handleAddItem","getCurrentPlaying","range","outputCount","arr","result","random","handleStartSpotify","getArray","getSingleRecord","updateSingleRecord","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/Research/myapp/src/SpotifyGetPlaylists.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate} from 'react-router-dom';\r\n\r\nconst SpotifyGetPlaylists = () => {\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const CURRENT_PLAYING_ENDPOINT = \"https://api.spotify.com/v1/me/player/currently-playing\";\r\n    const [trackName, setTrackName] = useState()\r\n    const [playingTrackArray, setPlayingTrackArray] = useState([])\r\n    const [userID, setUserID] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        \r\n        //Implementing the setInterval method\r\n        const interval = setInterval(() => {\r\n            axios\r\n                .get(CURRENT_PLAYING_ENDPOINT,{\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                    },\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\r\n                    if(response.data.item.name !== trackName){\r\n                        console.log(\"New Tracks\")\r\n                        console.log(\"Listening track name:\",response.data.context.uri)\r\n                        console.log(\"Listening track name:\",response.data.item.name)\r\n                        setTrackName(response.data.item.name)\r\n                        setPlayingTrackArray(playingTrackArray => [...playingTrackArray, [response.data.timestamp,response.data.item.name,response.data.context.uri]])\r\n                    }\r\n                    \r\n                    // console.log(\"Listening track playlist:\",response.data.context.uri)\r\n                    // console.log(\"Listening track timestamp:\",response.data.timestamp)\r\n                    //console.log(getRandomProperty(response.data.items))\r\n                    \r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n        }, 1000);\r\n  \r\n        //Clearing the interval\r\n        //return () => clearInterval(interval);\r\n        return () => {setTimeout(()=>{\r\n            clearInterval(interval)\r\n            console.log(\"Interval Cleared\")\r\n        },60000)}\r\n    }, );\r\n\r\n    // Actually all these is just for console.log display\r\n    const [token,setToken] = useState(\"\")\r\n    const [data, setData] = useState(\"\")\r\n    const [playlistID,setPlaylistID] = useState(\"\")\r\n    const itemUriArray = []\r\n    const allLikedSongsArray = []\r\n    const top40ItemUriArray = []\r\n\r\n    // useEffect to get the token \r\n    useEffect(() => {\r\n             \r\n        if(localStorage.accessToken){\r\n            setToken(localStorage.accessToken)\r\n        }\r\n\r\n        // this function is getting the userid\r\n        const goToHomePage = () => navigate('/userid');\r\n\r\n        const fetchData = async () => {\r\n            // get the data from the api\r\n            const sessionData = await fetch('/survey');\r\n            // convert data to json\r\n            const json = await sessionData.json();\r\n            \r\n            setUserID(json.userID)\r\n\r\n            console.log(\"UserID\",json.userID)\r\n\r\n            if(!sessionData.ok){\r\n                goToHomePage()\r\n            }\r\n\r\n        }\r\n\r\n        fetchData()\r\n        \r\n\r\n    },[])\r\n     \r\n    // handleGetUserID that trigger all the other function\r\n    const handleGetUserID = async () => {\r\n\r\n        let id = \"\"\r\n        let listID = \"\"\r\n        let listID2 = \"\" \r\n\r\n        const PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me\"\r\n\r\n            await axios\r\n                .get(PLAYLIST_ENDPOINT,{\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                    },\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    setData(response.data.id)\r\n                    id = response.data.id\r\n                    console.log(\"Token from set\",response.data)\r\n                    console.log(\"ID:\",response.data.id)\r\n                    // console.log(\"Timestamp:\",response.data.timestamp)\r\n                    // console.log(\"Token from set\",response)\r\n                    // console.log(\"Token from set\",data)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })  \r\n        \r\n        //handleCreatePlaylists()\r\n        const CREATE_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/users/\" \r\n        \r\n        const toString = (CREATE_PLAYLIST_ENDPOINT+id+\"/playlists\")\r\n\r\n        console.log(toString)\r\n        await axios.post(toString,\r\n                {\r\n                    name: \"Random Top40\"\r\n                },\r\n                {\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                    \r\n                })\r\n\r\n                .then((response) => {\r\n                    console.log(\"Playlist Added Successful\")\r\n                    setPlaylistID(response.data.id)\r\n                    listID = response.data.id\r\n                    \r\n                    \r\n                })\r\n\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    \r\n                })\r\n\r\n        await axios.post(toString,\r\n                {\r\n                    name: \"Top 40\"\r\n                },\r\n                {\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                    \r\n                })\r\n\r\n                .then((response) => {\r\n                    console.log(\"Playlist Added Successful\")\r\n                    setPlaylistID(response.data.id)\r\n                    listID2 = response.data.id\r\n                    \r\n                    \r\n                })\r\n\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    \r\n                })\r\n                \r\n        // handleGetLikedSongs()\r\n        const GET_LIKED_SONGS_ENDPOINT = \"https://api.spotify.com/v1/me/tracks?limit=50\"\r\n        let totalLiked = \"\"\r\n\r\n        await axios\r\n                .get(GET_LIKED_SONGS_ENDPOINT,{\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                    },\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    \r\n                    console.log(\"User Liked Songs\",response.data.items)\r\n                    console.log(\"total\",response.data.total)\r\n                    totalLiked = response.data.total\r\n                    \r\n                    // if liked songs is less than 50\r\n                    if(response.data.total <= 50){\r\n                        if(response.data.total <= 40){\r\n                            const array = randomUniqueNum(response.data.items.length,response.data.items.length)\r\n\r\n                            for(let i = 0; i < array.length; i++){\r\n                                itemUriArray.push(response.data.items[array[i]].track.uri);\r\n                            }\r\n                        }\r\n                        if(response.data.total > 40){\r\n                            // getting random number\r\n                            const array = randomUniqueNum(response.data.items.length,40)\r\n                            // for loop to get the track uri\r\n                            for(let i = 0; i < array.length; i++){\r\n                                console.log(response.data.items[array[i]].track.uri);\r\n                                itemUriArray.push(response.data.items[array[i]].track.uri);\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n        \r\n        // if liked songs is more than 50\r\n        if(totalLiked > 50){\r\n            const array = randomUniqueNum(totalLiked,40)\r\n            console.log(array)\r\n            for(let i = 0; i <= Math.floor(totalLiked / 50); i++){\r\n                            \r\n                const offset = i*50\r\n                const GET_LIKED_SONGS_MORE_ENDPOINT = \"https://api.spotify.com/v1/me/tracks?limit=50&offset=\"\r\n                const toString = (GET_LIKED_SONGS_MORE_ENDPOINT+offset)\r\n                await axios\r\n                    .get(toString,{\r\n                        headers:{\r\n                            Authorization: \"Bearer \" + token,\r\n                        },\r\n                                    \r\n                    })\r\n                    .then((response) => {\r\n                        \r\n                        for(let i = 0; i < response.data.items.length; i++){\r\n                            allLikedSongsArray.push(response.data.items[i])\r\n                        }\r\n        \r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n                    })\r\n                        \r\n            }\r\n            console.log(allLikedSongsArray)\r\n            for(let i = 0; i < array.length; i++){\r\n                itemUriArray.push(allLikedSongsArray[array[i]].track.uri)\r\n            }\r\n        }\r\n\r\n        if(totalLiked > 0){\r\n            const GET_RECENT_TOP_40_LIKED_SONGS= \"https://api.spotify.com/v1/me/tracks?limit=40&offset=0\"\r\n            await axios\r\n                    .get(GET_RECENT_TOP_40_LIKED_SONGS,{\r\n                        headers:{\r\n                            Authorization: \"Bearer \" + token,\r\n                        },\r\n                                    \r\n                    })\r\n                    .then((response) => {\r\n                        console.log(\"Length\",response.data.items.length)\r\n                        \r\n                        const array = randomUniqueNum(response.data.items.length,response.data.items.length)\r\n                        console.log(\"this is the array\",array)\r\n                        for(let i = 0; i < array.length; i++){\r\n                            top40ItemUriArray.push(response.data.items[array[i]].track.uri);\r\n                        }\r\n        \r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n                    })\r\n        }\r\n\r\n       \r\n\r\n        // handleAddItem \r\n        const ADD_ITEM_ENDPOINT = \"https://api.spotify.com/v1/playlists/\"\r\n        //console.log(\"2\"+playlistID2)\r\n        const toString2 = (ADD_ITEM_ENDPOINT+listID+\"/tracks\")\r\n        console.log(\"ilst is\" +listID)\r\n        console.log(toString2)\r\n        console.log(itemUriArray)\r\n        const toString3 = (ADD_ITEM_ENDPOINT+listID2+\"/tracks\")\r\n        console.log(\"ilst is\" +listID2)\r\n        console.log(toString3)\r\n        console.log(top40ItemUriArray)\r\n\r\n        await axios.post(toString2,\r\n            {\r\n                uris: itemUriArray // random top 40\r\n            },\r\n            {\r\n                headers:{\r\n                    Authorization: \"Bearer \" + token,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n                \r\n            })\r\n\r\n            .then((response) => {\r\n                console.log(\"Items Added Successful\")\r\n                setPlaylistID(response)\r\n            })\r\n\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n        await axios.post(toString3,\r\n            {\r\n                uris: top40ItemUriArray\r\n            },\r\n            {\r\n                headers:{\r\n                    Authorization: \"Bearer \" + token,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n                \r\n            })\r\n\r\n            .then((response) => {\r\n                console.log(\"Items Added Successful\")\r\n                setPlaylistID(response)\r\n            })\r\n\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n        \r\n        // handle update single record\r\n        await axios \r\n            .patch(\"/survey/\"+userID,{\r\n                \"top40\": top40ItemUriArray,\r\n                \"randomTop40\": itemUriArray\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n            })\r\n        \r\n    }\r\n\r\n    const handleCreatePlaylists = async () => {      \r\n        const CREATE_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/users/\" \r\n        \r\n        const toString = (CREATE_PLAYLIST_ENDPOINT+data+\"/playlists\")\r\n\r\n        console.log(toString)\r\n        await axios.post(toString,\r\n                {\r\n                    name: \"Top2\"\r\n                },\r\n                {\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                    \r\n                })\r\n\r\n                .then((response) => {\r\n                    console.log(\"Playlist Added Successful\")\r\n                    setPlaylistID(response.data.id)\r\n                    \r\n                })\r\n\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    \r\n                })    \r\n\r\n    } \r\n\r\n    const handleGetLikedSongs = async () => {\r\n        const GET_LIKED_SONGS_ENDPOINT = \"https://api.spotify.com/v1/me/tracks?limit=50\"\r\n        await axios\r\n                .get(GET_LIKED_SONGS_ENDPOINT,{\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                    },\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\r\n                    console.log(\"User Liked Songs\",response.data.items)\r\n                    //console.log(getRandomProperty(response.data.items))\r\n                    \r\n                    const array = randomUniqueNum(10,5)\r\n                    \r\n                    for(let i = 0; i < array.length; i++){\r\n                        console.log(response.data.items[array[i]].track.uri);\r\n                        itemUriArray.push(response.data.items[array[i]].track.uri);\r\n                    }\r\n                    \r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })  \r\n    }\r\n\r\n    const handleAddItem = async () => {\r\n        const ADD_ITEM_ENDPOINT = \"https://api.spotify.com/v1/playlists/\"\r\n        //console.log(\"2\"+playlistID2)\r\n        const toString = (ADD_ITEM_ENDPOINT+playlistID+\"/tracks\")\r\n        console.log(playlistID)\r\n        console.log(toString)\r\n        console.log(itemUriArray)\r\n\r\n        await axios.post(toString,\r\n            {\r\n                uris: itemUriArray\r\n            },\r\n            {\r\n                headers:{\r\n                    Authorization: \"Bearer \" + token,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n                \r\n            })\r\n\r\n            .then((response) => {\r\n                console.log(\"Items Added Successful\")\r\n                setPlaylistID(response)\r\n            })\r\n\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    const getCurrentPlaying = async () => {\r\n        const CURRENT_PLAYING_ENDPOINT = \"https://api.spotify.com/v1/me/player/currently-playing\"\r\n        await axios\r\n                .get(CURRENT_PLAYING_ENDPOINT,{\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                    },\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\r\n                    console.log(\"Listening track name:\",response.data)\r\n                    console.log(\"Listening track name:\",response.data.item.name)\r\n                    console.log(\"Listening track playlist:\",response.data.context.uri)\r\n                    console.log(\"Listening track timestamp:\",response.data.timestamp)\r\n                    //console.log(getRandomProperty(response.data.items))\r\n                    \r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n    }\r\n\r\n    function randomUniqueNum(range, outputCount) {\r\n\r\n        let arr = []\r\n        for (let i = 0; i <= range; i++) {\r\n          arr.push(i)\r\n        }\r\n      \r\n        let result = [];\r\n      \r\n        for (let i = 1; i <= outputCount; i++) {\r\n          const random = Math.floor(Math.random() * (range - i));\r\n          result.push(arr[random]);\r\n          arr[random] = arr[range - i];\r\n        }\r\n      \r\n        return result;\r\n    }\r\n\r\n    // This is the function that trigger everythings\r\n    const handleStartSpotify = async () => {\r\n        console.log(\"Start Here\")\r\n        handleGetUserID()\r\n        //handleGetLikedSongs()\r\n        //handleAddItem()\r\n    }\r\n\r\n    const getArray = async () => {\r\n        console.log(playingTrackArray)\r\n    }\r\n\r\n    const getSingleRecord = async () => {\r\n        await axios\r\n            .get(\"/survey/\"+userID)\r\n            .then((response) => {\r\n                console.log(\"Message\",response)\r\n            })\r\n    }\r\n\r\n    const updateSingleRecord = async () => {\r\n        await axios \r\n            .patch(\"/survey/\"+\"newnew\",{\r\n                \"top40\": [\"88\"],\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n            })\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <button onClick={handleStartSpotify}>Start Spotify</button>\r\n            <button onClick={getCurrentPlaying}>Get Playing Songs</button>\r\n            <button onClick={getArray}>Get Array</button>\r\n            <button onClick={getSingleRecord}>Axios Get Single Record</button>\r\n            <p>{playingTrackArray}</p>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SpotifyGetPlaylists;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}