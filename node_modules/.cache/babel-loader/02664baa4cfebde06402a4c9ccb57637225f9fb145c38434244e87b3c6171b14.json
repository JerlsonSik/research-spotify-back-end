{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Research\\\\myapp\\\\src\\\\SpotifyGetPlaylists.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me/player/recently-played?after=1687918626&limit=50\";\nconst SpotifyGetPlaylists = () => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.accessToken) {\n      setToken(localStorage.accessToken);\n    }\n  }, []);\n  const handleGetPlaylists = () => {\n    axios.get(PLAYLIST_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      setData(response.data);\n      console.log(\"Token from set\", response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleGetPlaylists,\n    children: \"Get Playlists\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(SpotifyGetPlaylists, \"TYD4qSDUDMi7TUK4XUeBdcS6o1Y=\");\n_c = SpotifyGetPlaylists;\nexport default SpotifyGetPlaylists;\nvar _c;\n$RefreshReg$(_c, \"SpotifyGetPlaylists\");","map":{"version":3,"names":["axios","useState","useEffect","jsxDEV","_jsxDEV","PLAYLIST_ENDPOINT","SpotifyGetPlaylists","_s","token","setToken","data","setData","localStorage","accessToken","handleGetPlaylists","get","headers","Authorization","then","response","console","log","catch","error","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/Research/myapp/src/SpotifyGetPlaylists.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me/player/recently-played?after=1687918626&limit=50\"\r\n\r\nconst SpotifyGetPlaylists = () => {\r\n\r\n    const [token,setToken] = useState(\"\")\r\n    const [data, setData] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n             \r\n        if(localStorage.accessToken){\r\n            setToken(localStorage.accessToken)\r\n        }\r\n\r\n    },[])\r\n     \r\n    \r\n    const handleGetPlaylists = () => {\r\n    \r\n        axios\r\n            .get(PLAYLIST_ENDPOINT,{\r\n                headers:{\r\n                    Authorization: \"Bearer \" + token,\r\n                },\r\n                \r\n            })\r\n            .then((response) => {\r\n                setData(response.data)\r\n                console.log(\"Token from set\",response.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    return ( \r\n        <button onClick={handleGetPlaylists}>Get Playlists</button>\r\n     );\r\n}\r\n \r\nexport default SpotifyGetPlaylists;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,iBAAiB,GAAG,gFAAgF;AAE1G,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IAEZ,IAAGU,YAAY,CAACC,WAAW,EAAC;MACxBJ,QAAQ,CAACG,YAAY,CAACC,WAAW,CAAC;IACtC;EAEJ,CAAC,EAAC,EAAE,CAAC;EAGL,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAE7Bd,KAAK,CACAe,GAAG,CAACV,iBAAiB,EAAC;MACnBW,OAAO,EAAC;QACJC,aAAa,EAAE,SAAS,GAAGT;MAC/B;IAEJ,CAAC,CAAC,CACDU,IAAI,CAAEC,QAAQ,IAAK;MAChBR,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAAC;MACtBU,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACF,QAAQ,CAACT,IAAI,CAAC;IAC/C,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IAAK;MACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACtB,CAAC,CAAC;EACV,CAAC;EAED,oBACInB,OAAA;IAAQoB,OAAO,EAAEV,kBAAmB;IAAAW,QAAA,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEnE,CAAC;AAAAtB,EAAA,CAnCKD,mBAAmB;AAAAwB,EAAA,GAAnBxB,mBAAmB;AAqCzB,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}