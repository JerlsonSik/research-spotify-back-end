{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Research\\\\myapp\\\\src\\\\CheckBox.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckBox = _ref => {\n  _s();\n  let {\n    optionArray\n  } = _ref;\n  const [selected, setSelected] = useState(null);\n  const [hidden, setHidden] = useState(\"hidden\");\n  const [disabled, setDisabled] = useState(\"disabled\");\n  const onChange = optionID => {\n    setSelected(optionID);\n    // console.log(\"please\",{optionArray.le})\n\n    if (optionID === optionArray.length - 1 && optionArray[optionID] === \"Other (please specify):\") {\n      setHidden(\"\");\n      setDisabled(\"\");\n    } else {\n      setHidden(\"hidden\");\n      setDisabled(\"disabled\");\n    }\n  };\n  return [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [optionArray.map((option, optionID) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: optionID === selected,\n          onChange: () => onChange(optionID)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, optionID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n      hidden: hidden,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this), optionArray[selected]];\n};\n_s(CheckBox, \"2TMe++/w6HqolTMBLddynCkW4g4=\");\n_c = CheckBox;\nconsole.log(CheckBox[0]);\nconsole.log(CheckBox[1]);\nexport default {\n  CheckBox\n};\nvar _c;\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","CheckBox","_ref","_s","optionArray","selected","setSelected","hidden","setHidden","disabled","setDisabled","onChange","optionID","length","children","map","option","type","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","console","log","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/Research/myapp/src/CheckBox.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst CheckBox = ({optionArray}) => {\r\n\r\n    const [selected, setSelected] = useState(null);\r\n    const [hidden, setHidden] = useState(\"hidden\");\r\n    const [disabled, setDisabled] = useState(\"disabled\");\r\n\r\n    const onChange = (optionID) => {\r\n        setSelected((optionID))\r\n        // console.log(\"please\",{optionArray.le})\r\n\r\n\r\n        if(optionID === optionArray.length-1 && optionArray[optionID] === \"Other (please specify):\"){\r\n            setHidden(\"\");\r\n            setDisabled(\"\");\r\n        }else{\r\n            setHidden(\"hidden\");\r\n            setDisabled(\"disabled\")\r\n        }\r\n        \r\n    }\r\n\r\n    return ([ \r\n        <div>\r\n            {optionArray.map((option,optionID) => (\r\n                <div key={optionID} >\r\n                    <div>\r\n                        {<input \r\n                            type=\"checkbox\"\r\n                            checked={optionID === selected}\r\n                            onChange={() => onChange(optionID)}\r\n                        />}\r\n                    \r\n                        <label>{option}</label>\r\n                                         \r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                ))}\r\n                <label hidden = {hidden}><input type=\"text\" disabled = {disabled}/></label>\r\n            \r\n            \r\n        </div>\r\n    ,optionArray[selected]]);\r\n}\r\n\r\nconsole.log(CheckBox[0])\r\nconsole.log(CheckBox[1])\r\n \r\nexport default {CheckBox};"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAACC;EAAW,CAAC,GAAAF,IAAA;EAE3B,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC;EAC9C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,UAAU,CAAC;EAEpD,MAAMa,QAAQ,GAAIC,QAAQ,IAAK;IAC3BN,WAAW,CAAEM,QAAS,CAAC;IACvB;;IAGA,IAAGA,QAAQ,KAAKR,WAAW,CAACS,MAAM,GAAC,CAAC,IAAIT,WAAW,CAACQ,QAAQ,CAAC,KAAK,yBAAyB,EAAC;MACxFJ,SAAS,CAAC,EAAE,CAAC;MACbE,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,MAAI;MACDF,SAAS,CAAC,QAAQ,CAAC;MACnBE,WAAW,CAAC,UAAU,CAAC;IAC3B;EAEJ,CAAC;EAED,OAAQ,cACJV,OAAA;IAAAc,QAAA,GACKV,WAAW,CAACW,GAAG,CAAC,CAACC,MAAM,EAACJ,QAAQ,kBAC7BZ,OAAA;MAAAc,QAAA,eACId,OAAA;QAAAc,QAAA,gBACKd,OAAA;UACGiB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEN,QAAQ,KAAKP,QAAS;UAC/BM,QAAQ,EAAEA,CAAA,KAAMA,QAAQ,CAACC,QAAQ;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eAEFtB,OAAA;UAAAc,QAAA,EAAQE;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEtB;IAAC,GAVAV,QAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYb,CAEJ,CAAC,eACFtB,OAAA;MAAOO,MAAM,EAAIA,MAAO;MAAAO,QAAA,eAACd,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACR,QAAQ,EAAIA;MAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG9E,CAAC,EACTlB,WAAW,CAACC,QAAQ,CAAC,CAAC;AAC3B,CAAC;AAAAF,EAAA,CA5CKF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA8CduB,OAAO,CAACC,GAAG,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAAC;AACxBuB,OAAO,CAACC,GAAG,CAACxB,QAAQ,CAAC,CAAC,CAAC,CAAC;AAExB,eAAe;EAACA;AAAQ,CAAC;AAAC,IAAAsB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}