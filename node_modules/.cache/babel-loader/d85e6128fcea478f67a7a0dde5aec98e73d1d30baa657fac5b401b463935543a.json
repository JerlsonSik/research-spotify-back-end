{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Research\\\\myapp\\\\src\\\\useCheckBox.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useCheckBox = _ref => {\n  _s();\n  let {\n    optionArray\n  } = _ref;\n  const [selected, setSelected] = useState(null);\n  const [hidden, setHidden] = useState(\"hidden\");\n  const [disabled, setDisabled] = useState(\"disabled\");\n  const [optionValue, setOptionValue] = useState(\"\");\n  const onChange = optionID => {\n    setSelected(optionID);\n    setOptionValue(optionArray[optionID]);\n    if (optionID === optionArray.length - 1 && optionArray[optionID] === \"Other (please specify):\") {\n      setHidden(\"\");\n      setDisabled(\"\");\n    } else {\n      setHidden(\"hidden\");\n      setDisabled(\"disabled\");\n    }\n  };\n  return {\n    optionValue,\n    render: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [optionArray.map((option, optionID) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: optionID === selected,\n          onChange: () => onChange(optionID)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, optionID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n        hidden: hidden,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          disabled: disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  };\n};\n_s(useCheckBox, \"BkpSKabjPnIhV9M/jMRX50g1usQ=\");\nexport default useCheckBox;","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","useCheckBox","_ref","_s","optionArray","selected","setSelected","hidden","setHidden","disabled","setDisabled","optionValue","setOptionValue","onChange","optionID","length","render","children","map","option","type","checked","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/PC/Desktop/Research/myapp/src/useCheckBox.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useCheckBox = ({optionArray}) => {\r\n\r\n    const [selected, setSelected] = useState(null);\r\n    const [hidden, setHidden] = useState(\"hidden\");\r\n    const [disabled, setDisabled] = useState(\"disabled\");\r\n    const [optionValue, setOptionValue] = useState(\"\");\r\n\r\n\r\n    const onChange = (optionID) => {\r\n        setSelected((optionID))\r\n        setOptionValue(optionArray[optionID])\r\n\r\n\r\n        if(optionID === optionArray.length-1 && optionArray[optionID] === \"Other (please specify):\"){\r\n            setHidden(\"\");\r\n            setDisabled(\"\");\r\n        }else{\r\n            setHidden(\"hidden\");\r\n            setDisabled(\"disabled\")\r\n        }\r\n        \r\n    }\r\n\r\n    return {\r\n        optionValue, \r\n        render:(\r\n        <div>\r\n            {optionArray.map((option,optionID) => (\r\n                    <div key={optionID} >\r\n\r\n                        {<input \r\n                            type=\"checkbox\"\r\n                            checked={optionID === selected}\r\n                            onChange={() => onChange(optionID)}\r\n                        />}\r\n                        \r\n                        <label>{option}</label>\r\n                \r\n                </div>\r\n\r\n                ))}\r\n                <label hidden = {hidden}><input type=\"text\" disabled = {disabled}/></label>\r\n            \r\n            \r\n        </div>)\r\n    };\r\n}\r\n \r\nexport default useCheckBox;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAACC;EAAW,CAAC,GAAAF,IAAA;EAE9B,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC;EAC9C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,UAAU,CAAC;EACpD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAGlD,MAAMe,QAAQ,GAAIC,QAAQ,IAAK;IAC3BR,WAAW,CAAEQ,QAAS,CAAC;IACvBF,cAAc,CAACR,WAAW,CAACU,QAAQ,CAAC,CAAC;IAGrC,IAAGA,QAAQ,KAAKV,WAAW,CAACW,MAAM,GAAC,CAAC,IAAIX,WAAW,CAACU,QAAQ,CAAC,KAAK,yBAAyB,EAAC;MACxFN,SAAS,CAAC,EAAE,CAAC;MACbE,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,MAAI;MACDF,SAAS,CAAC,QAAQ,CAAC;MACnBE,WAAW,CAAC,UAAU,CAAC;IAC3B;EAEJ,CAAC;EAED,OAAO;IACHC,WAAW;IACXK,MAAM,eACNhB,OAAA;MAAAiB,QAAA,GACKb,WAAW,CAACc,GAAG,CAAC,CAACC,MAAM,EAACL,QAAQ,kBACzBd,OAAA;QAAAiB,QAAA,gBAEKjB,OAAA;UACGoB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEP,QAAQ,KAAKT,QAAS;UAC/BQ,QAAQ,EAAEA,CAAA,KAAMA,QAAQ,CAACC,QAAQ;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eAEFzB,OAAA;UAAAiB,QAAA,EAAQE;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GARjBX,QAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUjB,CAEJ,CAAC,eACFzB,OAAA;QAAOO,MAAM,EAAIA,MAAO;QAAAU,QAAA,eAACjB,OAAA;UAAOoB,IAAI,EAAC,MAAM;UAACX,QAAQ,EAAIA;QAAS;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG9E;EACT,CAAC;AACL,CAAC;AAAAtB,EAAA,CA9CKF,WAAW;AAgDjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}