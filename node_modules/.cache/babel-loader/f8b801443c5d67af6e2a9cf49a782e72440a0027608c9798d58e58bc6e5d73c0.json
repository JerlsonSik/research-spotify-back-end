{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Research\\\\myapp\\\\src\\\\SpotifyGetPlaylists.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me\";\nconst SpotifyGetPlaylists = () => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [data, setData] = useState({});\n  const [playlistID, setPlaylistID] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.accessToken) {\n      setToken(localStorage.accessToken);\n    }\n  }, []);\n  const handleGetPlaylists = async () => {\n    await axios.get(PLAYLIST_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      setData(response.data.id);\n      console.log(\"Token from set\", response.data);\n      console.log(\"ID:\", response.data.id);\n      // console.log(\"Timestamp:\",response.data.timestamp)\n      // console.log(\"Token from set\",response)\n      // console.log(\"Token from set\",data)\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleCreatePlaylists = async () => {\n    const CREATE_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/users/\";\n    const userID = {\n      data\n    };\n    console.log(data);\n    const toString = CREATE_PLAYLIST_ENDPOINT + data + \"/playlists\";\n    console.log(\"this is the link\", toString);\n    const playlistCreated = await axios.post(toString, {\n      name: JSON.stringify(\"Top40\")\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(\"Added Successful\", response);\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(\"Playlist\", playlistCreated);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetPlaylists,\n      children: \"Get Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreatePlaylists,\n      children: \"Create Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(SpotifyGetPlaylists, \"2fQHSadAyKmMt8Ww8F6SH1EIRwc=\");\n_c = SpotifyGetPlaylists;\nexport default SpotifyGetPlaylists;\nvar _c;\n$RefreshReg$(_c, \"SpotifyGetPlaylists\");","map":{"version":3,"names":["axios","useState","useEffect","jsxDEV","_jsxDEV","PLAYLIST_ENDPOINT","SpotifyGetPlaylists","_s","token","setToken","data","setData","playlistID","setPlaylistID","localStorage","accessToken","handleGetPlaylists","get","headers","Authorization","then","response","id","console","log","catch","error","handleCreatePlaylists","CREATE_PLAYLIST_ENDPOINT","userID","toString","playlistCreated","post","name","JSON","stringify","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/Research/myapp/src/SpotifyGetPlaylists.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me\"\r\n\r\n\r\nconst SpotifyGetPlaylists = () => {\r\n\r\n    const [token,setToken] = useState(\"\")\r\n    const [data, setData] = useState({})\r\n    const [playlistID,setPlaylistID] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n             \r\n        if(localStorage.accessToken){\r\n            setToken(localStorage.accessToken)\r\n        }\r\n\r\n    },[])\r\n     \r\n    \r\n    const handleGetPlaylists = async () => {\r\n\r\n            await axios\r\n                .get(PLAYLIST_ENDPOINT,{\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                    },\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    setData(response.data.id)\r\n                    console.log(\"Token from set\",response.data)\r\n                    console.log(\"ID:\",response.data.id)\r\n                    // console.log(\"Timestamp:\",response.data.timestamp)\r\n                    // console.log(\"Token from set\",response)\r\n                    // console.log(\"Token from set\",data)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })        \r\n\r\n        \r\n    }\r\n\r\n    const handleCreatePlaylists = async () => {      \r\n        const CREATE_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/users/\" \r\n        const userID = {data}\r\n        console.log(data)\r\n        const toString = (CREATE_PLAYLIST_ENDPOINT+data+\"/playlists\")\r\n        console.log(\"this is the link\",toString)\r\n        const playlistCreated = await axios.post(toString,\r\n                {\r\n                    name: JSON.stringify(\"Top40\")\r\n                },\r\n                {\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                    \r\n                })\r\n\r\n                .then((response) => {\r\n                    console.log(\"Added Successful\",response)\r\n                })\r\n\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })    \r\n        console.log(\"Playlist\",playlistCreated)    \r\n\r\n    } \r\n\r\n    return ( \r\n        <div>\r\n            <button onClick={handleGetPlaylists}>Get Playlists</button>\r\n            <button onClick={handleCreatePlaylists}>Create Playlists</button>\r\n            {/* <button onClick={handleAddItem}>Add Item</button> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SpotifyGetPlaylists;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}