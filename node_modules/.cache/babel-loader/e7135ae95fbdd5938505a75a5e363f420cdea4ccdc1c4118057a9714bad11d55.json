{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Research\\\\myapp\\\\src\\\\SpotifyGetPlaylists.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyGetPlaylists = () => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [data, setData] = useState({});\n  const [playlistID, setPlaylistID] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.accessToken) {\n      setToken(localStorage.accessToken);\n    }\n  }, []);\n  const handleGetUserID = async () => {\n    const PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me\";\n    await axios.get(PLAYLIST_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      setData(response.data.id);\n      console.log(\"Token from set\", response.data);\n      console.log(\"ID:\", response.data.id);\n      // console.log(\"Timestamp:\",response.data.timestamp)\n      // console.log(\"Token from set\",response)\n      // console.log(\"Token from set\",data)\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleCreatePlaylists = async () => {\n    const CREATE_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/users/\";\n    const toString = CREATE_PLAYLIST_ENDPOINT + data + \"/playlists\";\n    await axios.post(toString, {\n      name: JSON.stringify(\"Top40\")\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(\"Playlist Added Successful\");\n      setPlaylistID(response.data.id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleAddItem = async () => {\n    const ADD_ITEM_ENDPOINT = \"https://api.spotify.com/v1/playlists/\";\n    const toString = ADD_ITEM_ENDPOINT + playlistID + \"/tracks\";\n    console.log(playlistID);\n    console.log(toString);\n  };\n  const handleGetLikedSongs = async () => {\n    const GET_LIKED_SONGS_ENDPOINT = \"https://api.spotify.com/v1/me/tracks?limit=50\";\n    await axios.get(GET_LIKED_SONGS_ENDPOINT, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      // //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\n      // console.log(\"User Liked Songs\",response.data.items)\n      // //console.log(getRandomProperty(response.data.items))\n      // console.log(response.data.items[getRandomProperty(response.data.items)].track.uri);.\n      const generateRandomNumbers = (min, max, times) => {\n        const randoms = [];\n        for (let i = 0; i < times; i++) {\n          randoms.push(Math.floor(Math.random() * (max - min) + min));\n        }\n        return randoms;\n      };\n\n      // Later call it like so\n      generateRandomNumbers(0, 100, 40);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  function getRandomProperty(obj) {\n    const keys = Object.keys(obj);\n    return keys[Math.floor(Math.random() * keys.length)];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetUserID,\n      children: \"Get ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreatePlaylists,\n      children: \"Create Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetLikedSongs,\n      children: \"Get Liked Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(SpotifyGetPlaylists, \"2fQHSadAyKmMt8Ww8F6SH1EIRwc=\");\n_c = SpotifyGetPlaylists;\nexport default SpotifyGetPlaylists;\nvar _c;\n$RefreshReg$(_c, \"SpotifyGetPlaylists\");","map":{"version":3,"names":["axios","useState","useEffect","jsxDEV","_jsxDEV","SpotifyGetPlaylists","_s","token","setToken","data","setData","playlistID","setPlaylistID","localStorage","accessToken","handleGetUserID","PLAYLIST_ENDPOINT","get","headers","Authorization","then","response","id","console","log","catch","error","handleCreatePlaylists","CREATE_PLAYLIST_ENDPOINT","toString","post","name","JSON","stringify","handleAddItem","ADD_ITEM_ENDPOINT","handleGetLikedSongs","GET_LIKED_SONGS_ENDPOINT","generateRandomNumbers","min","max","times","randoms","i","push","Math","floor","random","getRandomProperty","obj","keys","Object","length","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/Research/myapp/src/SpotifyGetPlaylists.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst SpotifyGetPlaylists = () => {\r\n\r\n    const [token,setToken] = useState(\"\")\r\n    const [data, setData] = useState({})\r\n    const [playlistID,setPlaylistID] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n             \r\n        if(localStorage.accessToken){\r\n            setToken(localStorage.accessToken)\r\n        }\r\n\r\n    },[])\r\n     \r\n    \r\n    const handleGetUserID = async () => {\r\n\r\n        const PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me\"\r\n\r\n            await axios\r\n                .get(PLAYLIST_ENDPOINT,{\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                    },\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    setData(response.data.id)\r\n                    console.log(\"Token from set\",response.data)\r\n                    console.log(\"ID:\",response.data.id)\r\n                    // console.log(\"Timestamp:\",response.data.timestamp)\r\n                    // console.log(\"Token from set\",response)\r\n                    // console.log(\"Token from set\",data)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })        \r\n\r\n        \r\n    }\r\n\r\n    const handleCreatePlaylists = async () => {      \r\n        const CREATE_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/users/\" \r\n        \r\n        const toString = (CREATE_PLAYLIST_ENDPOINT+data+\"/playlists\")\r\n    \r\n        await axios.post(toString,\r\n                {\r\n                    name: JSON.stringify(\"Top40\")\r\n                },\r\n                {\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                    \r\n                })\r\n\r\n                .then((response) => {\r\n                    console.log(\"Playlist Added Successful\")\r\n                    setPlaylistID(response.data.id)\r\n                })\r\n\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })    \r\n\r\n    } \r\n\r\n    const handleAddItem = async () => {\r\n        const ADD_ITEM_ENDPOINT = \"https://api.spotify.com/v1/playlists/\"\r\n        const toString = (ADD_ITEM_ENDPOINT+playlistID+\"/tracks\")\r\n        console.log(playlistID)\r\n        console.log(toString)\r\n    }\r\n\r\n    const handleGetLikedSongs = async () => {\r\n        const GET_LIKED_SONGS_ENDPOINT = \"https://api.spotify.com/v1/me/tracks?limit=50\"\r\n\r\n        await axios\r\n                .get(GET_LIKED_SONGS_ENDPOINT,{\r\n                    headers:{\r\n                        Authorization: \"Bearer \" + token,\r\n                    },\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    // //console.log(\"User Liked Songs\",response.data.items[0].track.uri)\r\n                    // console.log(\"User Liked Songs\",response.data.items)\r\n                    // //console.log(getRandomProperty(response.data.items))\r\n                    // console.log(response.data.items[getRandomProperty(response.data.items)].track.uri);.\r\n                    const generateRandomNumbers = (min, max, times) => {\r\n                        const randoms = []\r\n                    \r\n                        for (let i = 0; i < times; i++) {\r\n                            randoms.push(Math.floor(Math.random() * (max - min) + min))\r\n                        }\r\n                    \r\n                        return randoms\r\n                    }\r\n                    \r\n                    // Later call it like so\r\n                    generateRandomNumbers(0, 100, 40)\r\n                    \r\n                    \r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })  \r\n    }\r\n\r\n    function getRandomProperty(obj) {\r\n        const keys = Object.keys(obj);\r\n      \r\n        return keys[Math.floor(Math.random() * keys.length)];\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <button onClick={handleGetUserID}>Get ID</button>\r\n            <button onClick={handleCreatePlaylists}>Create Playlists</button>\r\n            <button onClick={handleAddItem}>Add Item</button>\r\n            <button onClick={handleGetLikedSongs}>Get Liked Songs</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SpotifyGetPlaylists;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}